<script>
import * as THREE from "three";
import { OrbitControls } from "three/addons/controls/OrbitControls.js";
import { GLTFLoader } from "three/addons/loaders/GLTFLoader.js";

const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(
    75,
    window.innerWidth / window.innerHeight,
    0.1,
    1000,
);

let object;
let controls;

let objectToRender = "helmet";

const loader = new GLTFLoader();

loader.load(
    `models/${objectToRender}/scene.gltf`,
    (gltf) => {
        object = gltf.scene;
        scene.add(object);
    },
    (xhr) => {
        console.log((xhr.loaded / xhr.total) * 100 + "%loaded");
    },
    (error) => {
        console.log(error);
    },
);

const renderer = new THREE.WebGLRenderer({ alpha: true });
renderer.setSize(window.innerWidth, window.innerHeight);

document.querySelector('.renderer').appendChild(renderer.domElement);

camera.position.z = 50;

const topLight = new THREE.DirectionalLight(0xffffff, 3);
topLight.position.set(200, 200, 200);
topLight.castShadow = true;
scene.add(topLight);

const ambientLight = new THREE.AmbientLight(0x333333, 5);
scene.add(ambientLight);

controls = new OrbitControls(camera, renderer.domElement);

const animate = () => {
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
};

window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});

animate();
</script>

<div class="renderer">
</div>

<style>
    div{
        width: : 100vh;
        height: 100dvh;
    }
</style>
